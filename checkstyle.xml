<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java"/>
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>
    <module name="NewlineAtEndOfFile"/>
    <module name="SuppressWarningsFilter"/>
    <module name="SuppressionFilter">
        <property name="file" value="${checkstyle.suppressions.file}"/>
        <property name="optional" value="true"/>
    </module>
    <module name="TreeWalker">
        <module name="SuppressWarningsHolder"/>
        <module name="SuppressionCommentFilter"/>
        <module name="MissingOverride"/>
        <module name="OuterTypeFilename"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="IllegalMethodCall">
            <property name="illegalMethodNames"
                      value="emptyList, emptyMap, emptyNavigableMap, emptyNavigableSet, emptySet,emptySortedMap, emptySortedSet, parse, systemDefault, systemDefaultZone, singleton, singletonList, singletonMap"/>
            <property name="excludedQualifiers" value="DockerImageName"/>
        </module>
        <module name="AvoidStarImport"/>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap">
            <property name="tokens" value="IMPORT, PACKAGE_DEF, STATIC_IMPORT"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
        </module>
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
        </module>
        <module name="LeftCurly">
            <property name="tokens"
                      value="ANNOTATION_DEF, CLASS_DEF, COMPACT_CTOR_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF, OBJBLOCK, RECORD_DEF, STATIC_INIT"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens" value="LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_TRY"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="ANNOTATION_DEF, CLASS_DEF, COMPACT_CTOR_DEF, CTOR_DEF, ENUM_DEF, INSTANCE_INIT, INTERFACE_DEF, LITERAL_FOR, LITERAL_WHILE, METHOD_DEF, RECORD_DEF, STATIC_INIT"/>
        </module>
        <module name="SuppressionXpathSingleFilter">
            <property name="id" value="RightCurlyAlone"/>
            <property name="query" value="//RCURLY[parent::SLIST[count(./*)=1] or preceding-sibling::*[last()][self::LCURLY]]"/>
        </module>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="ignoreEnhancedForColon" value="false"/>
            <property name="tokens"
                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SL_ASSIGN, SLIST, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="NoArrayTrailingComma"/>
        <module name="NoEnumTrailingComma"/>
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyStatement"/>
        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle"/>
        <module name="MissingSwitchDefault"/>
        <module name="DefaultComesLast"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>
        <module name="ModifierOrder"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="RedundantModifier"/>
        <module name="MutableException"/>
        <module name="NoWhitespaceAfter"/>
        <module name="ParameterAssignment"/>
        <module name="SingleSpaceSeparator"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnusedLocalVariable"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapEllipsis"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="TypeName">
            <property name="tokens" value="ANNOTATION_DEF, CLASS_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="LocalVariableName"/>
        <module name="LocalFinalVariableName"/>
        <module name="PatternVariableName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z][A-Z0-9]*$"/>
        </module>
        <module name="RecordComponentName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="RecordTypeParameterName">
            <property name="format" value="^[A-Z][A-Z0-9]*$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z][A-Z0-9]*$"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="^[A-Z][A-Z0-9]*$"/>
        </module>
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace"/>
        <module name="VariableDeclarationUsageDistance"/>
        <module name="UnusedImports"/>
        <module name="IllegalImport">
            <property name="id" value="IllegalImportMain"/>
            <property name="regexp" value="true"/>
            <property name="illegalClasses"
                      value=" ^io\.micrometer\.core\.lang\.(NonNull|Nullable),^org\.apache\.thrift\.annotation\.Nullable, ^org\.elasticsearch\.common\.Nullable,^org\.jetbrains\.annotations\.(NotNull|Nullable), ^org\.junit\.jupiter\.api\.Assertions,^org\.junit\.jupiter\.api\.Assertions\..*,^org\.junit\.Test, ^org\.springframework\.boot\.test\.web\.client\.TestRestTemplate,^org\.springframework\.lang\.(NonNull|Nullable), ^org\.springframework\.web\.client\.RestTemplate,^javax\.transaction\.Transactional"/>
            <property name="illegalPkgs" value="^org\.hamcrest"/>
        </module>
        <module name="IllegalImport">
            <property name="id" value="IllegalImportJavaIo"/>
            <property name="regexp" value="true"/>
            <property name="illegalClasses"
                      value="^java\.io\.BufferedInputStream"/>
        </module>
        <module name="ExplicitInitialization"/>
        <module name="InnerAssignment"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="NoCodeInFile"/>
        <module name="FinalParameters"/>
        <module name="ImportOrder">
            <property name="groups" value="/\./, /(javax\.|java\.)/"/>
            <property name="option" value="bottom"/>
            <property name="ordered" value="false"/>
            <property name="separated" value="true"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>
        <module name="DeclarationOrder"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
            <property name="packageAllowed" value="true"/>
        </module>
        <!-- <module name="ClassMemberImpliedModifier" /> Правило противоположно RedundantModifier -->
        <module name="MethodParamPad">
            <property name="tokens" value="CTOR_DEF, ENUM_CONSTANT_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, RECORD_DEF, SUPER_CTOR_CALL"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="COMMA, DOT, LABELED_STAT, METHOD_REF, POST_DEC, POST_INC, SEMI, ELLIPSIS"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="NoWhitespaceBeforeCaseDefaultColon"/>
        <module name="ParenPad"/>
        <module name="OperatorWrap"/>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens" value="CLASS_DEF, COMPACT_CTOR_DEF, CTOR_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF, RECORD_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationVariables"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
    </module>
</module>
